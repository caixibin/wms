<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com._520it.wms.mapper.EmployeeMapper">
	<sql id="where_clause">
		<where>
			<if test="keyword != null">
				and (e.name like concat("%",#{keyword},"%") or e.email like concat("%",#{keyword},"%"))
			</if>
			<if test="deptId > 0">
				and e.dept_id = #{deptId}
			</if>
		</where>
	</sql>
	
	<resultMap type="Employee" id="baseResultMap">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="age" column="age"/>
		<result property="admin" column="admin"/>
		<association property="dept" javaType="Department" columnPrefix="d_">
			<result property="id" column="id"/>
			<result property="name" column="name"/>
		</association>
		<collection property="roles" ofType="Role" column="id"
		select="com._520it.wms.mapper.RoleMapper.selectByEmployeeId"/>
	</resultMap>
	<resultMap type="Employee" id="SimpleResultMap">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
	</resultMap>

	<insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into employee(name,password,email,age,admin,dept_id) 
		values(#{name},#{password},#{email},#{age},#{admin},#{dept.id})
	</insert>
	
	<update id="update">
		update employee set 
		name = #{name} , 
		<if test="password != null">
		password = #{password}, 
		</if>
		email = #{email},
		age = #{age} ,
		admin = #{admin},
		dept_id = #{dept.id}
		where id = #{id} 
	</update>
	
	<delete id="delete">
		delete from employee where id = #{id}
	</delete>
	
	<select id="get" resultMap="baseResultMap">
		select e.id,e.name,e.password,e.email,e.age,e.admin,e.dept_id,d.id d_id,d.name d_name 
		from employee e join department d on e.dept_id = d.id
		where e.id = #{id}
	</select>
	
	<select id="queryForCount" resultType="int">
		select count(e.id) from employee e
		<include refid="where_clause"/>
	</select>
	<select id="queryForList" resultMap="baseResultMap">
		select e.id,e.name,e.password,e.email,e.age,e.admin,e.dept_id,d.id d_id,d.name d_name 
		from employee e join department d on e.dept_id = d.id 
		<include refid="where_clause"/>
		limit #{start} , #{pageSize}
	</select>
	<select id="insertRelation" resultMap="baseResultMap">
		insert into employee_role(employee_id,role_id) values(#{employeeId},#{roleId}) 
	</select>
	<delete id="deleteRelation">
		delete from employee_role where employee_id = #{employeeId}
	</delete>
	<delete id="batchDelete">
		delete from employee where id IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<delete id="batchDeleteRelation">
		delete from employee_role where employee_id IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 登录检查 -->
	<select id="checkLogin" resultType="Employee">
		select id,name,password,email,age,admin,dept_id FROM employee
		WHERE name = #{username} and password = #{password}
	</select>
	<select id="queryForName" resultType="com._520it.wms.domain.Employee">
		SELECT * FROM employee WHERE name = #{username}
	</select>

</mapper>