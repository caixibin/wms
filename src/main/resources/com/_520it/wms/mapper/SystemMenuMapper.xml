<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wms.mapper.SystemMenuMapper" >
  <resultMap id="BaseResultMap" type="com._520it.wms.domain.SystemMenu" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <association property="parent" javaType="SystemMenu"  columnPrefix="p_">
      <id column="id" property="id" jdbcType="BIGINT" />
      <result column="name" property="name" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `systemmenu`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.wms.domain.SystemMenu" useGeneratedKeys="true" keyProperty="id" >
    insert into `systemmenu` (name, url, sn, 
      parent_id)
    values (#{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, 
      #{parent.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.wms.domain.SystemMenu" >
    update `systemmenu`
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      parent_id = #{parent.id}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select c.id, c.name, c.url, c.sn, c.parent_id p_id , p.name p_name
    from `systemmenu` c LEFT JOIN systemmenu p on c.parent_id = p.id
    where c.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, url, sn, parent_id
    from `systemmenu`
  </select>
  <sql id="base_select">
    <where>

    </where>
  </sql>
  <select id="queryForCount" resultType="int">
    select count(c.id) from `systemmenu` c
    <include refid="base_where"/>
  </select>

  <sql id="base_where">
    <where>
      <choose>
        <when test="parentId != null">
          AND c.parent_id = #{parentId}
        </when>
        <otherwise>
          AND c.parent_id is NULL
        </otherwise>
      </choose>
    </where>
  </sql>
  <select id="queryForList" resultMap="BaseResultMap">
    select c.id, c.name, c.url, c.sn, c.parent_id p_id , p.name p_name
    from `systemmenu` c LEFT JOIN systemmenu p on c.parent_id = p.id
    <include refid="base_where"/>
    limit #{start},#{pageSize}
  </select>
  <select id="selectByRoleId" resultMap="BaseResultMap">
    SELECT * FROM systemmenu where id in (
        SELECT menu_id from role_menu WHERE role_id = #{id}
    )
  </select>

  <select id="queryMenusByParentSn" resultType="java.util.Map">
    SELECT id,name,url action,parent_id pId
    FROM systemmenu
    WHERE parent_id = (SELECT id FROM systemmenu WHERE sn = #{parentSn})
  </select>
  <select id="selectByPrimaryKeyAndEmployeeId" resultType="java.util.Map">
    SELECT id,name,url action,parent_id pId
      FROM systemmenu
      WHERE parent_id = (SELECT id FROM systemmenu WHERE sn = #{parentSn})
            AND id IN (
        SELECT menu_id FROM role_menu rm WHERE rm.role_id IN (
          SELECT er.role_id FROM employee_role er WHERE er.employee_id = #{employeeId}
        )
      )
  </select>
</mapper>